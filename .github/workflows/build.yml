name: Build and publish core querent packages

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+" # ex. v1.0.0
      - "v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+" # ex. v1.1.0-rc1
      - "v0.0.1" # used for testing only
      - "v0.0.1-rc[0-9]+" # used for testing only
  workflow_dispatch:
    inputs:
      release-version:
        description: "Release version (v#.#.#[-rc#])"
        required: true
env:
  INPUT_RELEASE_VERSION: ${{ github.event.inputs.release-version || github.ref_name }}
  POSTGRESQL_VERSION: 16.4.0
jobs:
  build-windows-binaries:
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]
    name: Build ${{ matrix.target }}
    runs-on: windows-2022
    steps:
      - name: Install OnnXRuntime
        shell: powershell
        run: |
          # Create a temporary directory for onnxruntime download and extraction
          $tmp_dir = New-TemporaryFile
          $tmp_dir_path = [System.IO.Path]::GetDirectoryName($tmp_dir.FullName)
          # Download the onnxruntime static library zip file
          Invoke-WebRequest -Uri "https://github.com/supertone-inc/onnxruntime-build/releases/download/v1.19.2/onnxruntime-win-x64-static_lib-1.19.2.zip" -OutFile (Join-Path $tmp_dir_path "onnxruntime.zip")
          # Unzip the downloaded file directly into the temporary path
          Expand-Archive -Path (Join-Path $tmp_dir_path "onnxruntime.zip") -DestinationPath $tmp_dir_path          # Set environment variables for ORT strategy and library location
          $env:ORT_STRATEGY = "system"
          $env:ORT_LIB_LOCATION = (Join-Path $tmp_dir_path "lib")
          # Persist environment variables to GitHub Actions environment
          Add-Content -Path $env:GITHUB_ENV -Value "ORT_STRATEGY=$env:ORT_STRATEGY"
          Add-Content -Path $env:GITHUB_ENV -Value "ORT_LIB_LOCATION=$env:ORT_LIB_LOCATION"
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
      - name: Build
        run: cargo build --features bundled
